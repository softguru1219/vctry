<div class="login-overlay" id="login_modal">
  <div class="container mt-4 flex-center">
    <div class="login-overlay--closebtn">
      <%= link_to image_tag("home/signing_menu_close.png", :alt => "Menu_close"), root_path, :class => 'd-inline-block align-bottom mobile-menu-icon' %>
    </div>
  </div>
  <div class="flex-center mt-5">
    <div class="logo">
      <%= image_tag("home/dark_logo.png", :alt => "logo") %>
    </div>
  </div>
  <div class="login_form container contain-padding">
    <%= image_tag("home/login_title.png", :alt => "login_title") %>

    <%= form_for(resource, as: resource_name, url: session_path(resource_name), html: {:class=>'signing_form__panel needs-validation', novalidate: true}) do |f| %>
      <% if flash['alert'] %>
        <div class="alert-message">
          <div class="alert alert-danger alert-dismissible fade show">
            <strong><%= I18n.t('errors.titles.warning')%></strong>
            <% if requires_confirm(session, flash) == true %>
              <span><%= flash['alert'] %> <%= link_to(I18n.t('alert.titles.resend_confirm_email'), user_confirmation_path(user: {:email => session[:email]}), :method => :post) %></span>
            <% else %>
              <span><%= flash['alert'] %></span>
            <% end %>
            <button type="button" class="close" data-dismiss="alert">&times;</button>
          </div>
        </div>
      <% end %>
      <% if flash['notice'] %>
        <div class="alert-success">
          <div class="alert alert-success alert-dismissible fade show">
            <span><%= flash['notice'] %></span>
            <button type="button" class="close" data-dismiss="alert">&times;</button>
          </div>
        </div>
      <% end %>
      <div class="form-group wrap-input100">
        <%= f.label :email, I18n.t('user.labels.email') %>
        <%= f.email_field :email, autocomplete: "email", :class=>"input100 form-control", :placeholder=>I18n.t('user.placefolders.email'), :required=>true %>
        <div class="invalid-feedback yellow">
          <%= I18n.t('user.hints.email') %>
        </div>
      </div>
      <div class="form-group wrap-input100">
        <%= f.label :password, I18n.t('user.labels.password') %>
        <%= f.password_field :password, autocomplete: "current-password", :class=>"input100 form-control", :placeholder=>I18n.t('user.placefolders.password'), :required=>true %>
        <div class="invalid-feedback yellow">
          <%= I18n.t('user.hints.password') %>
        </div>
      </div>
      
      <button type="submit" class="btn btn-default submit-button"><%= I18n.t('button.login') %></button>
      
      <div class="mt-3 mb-4">
        <% if devise_mapping.recoverable? %>
          <%= link_to I18n.t('user.titles.forgot_password.mobile'), new_password_path(resource_name) %>
        <% end %>
        <%= link_to I18n.t('user.titles.no_have_account'), new_user_registration_path %>
      </div>
    <% end %>
  </div>
</div>

<!-- <script>
  var email_msg = "<#%= flash['alert']%>"
  if (email_msg.length > 0){
    $('.invalid-feedback').eq(0).css('display', 'block')
    $('.invalid-feedback').eq(0).text('The email address or password entered does not match any account')
  }
</script> -->
<script>
  $('#new_user').click(function() {
    var forms = document.getElementsByClassName('needs-validation');
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      });
    });
  });
</script>