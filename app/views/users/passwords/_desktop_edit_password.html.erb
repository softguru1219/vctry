<div class="home-background signing">
  <div class="row">
    <div class="col-md-7" style="top: 28vh">
      <div class="container flex-center" style="font-size: 2rem">
        <span><b><%= I18n.t('homepage.titles.desktop.title').html_safe %></b></span>
      </div>
    </div>
    <div class="col-md-5">
      <div class="container flex-center">
        <div class="auth-panel">
          <%= render partial: 'users/sessions/desktop_login' %>
          <div class="mt-5">
            <div class="signup-box">
              <h6 class="blue"><%= I18n.t('user.edit.titles.change_password')%></h6>
              <%= form_for(resource, as: resource_name, url: password_path(resource_name), html: {method: :put, :class=>'signing_form__panel needs-validation', novalidate: true, :oninput=>'user_password_confirmation.setCustomValidity(user_password_confirmation.value != user_password.value ? "Passwords do not match." : "")'}) do |f| %>
                <% if resource.errors.full_messages.present? %>
                  <div class="alert-message">
                    <div class="alert alert-danger alert-dismissible fade show">
                      <strong><%= I18n.t('errors.titles.warning')%>!</strong>
                      <span><%= resource.errors.full_messages.first %></span>
                      <button type="button" class="close" data-dismiss="alert">&times;</button>
                    </div>
                  </div>  
                <% end %>
                <%= f.hidden_field :reset_password_token %>
                <div class="form-group wrap-input100">
                  <%= f.label :password, I18n.t('user.labels.new_password') %>
                  <% if @minimum_password_length %>
                    <em>(<%= @minimum_password_length %> characters minimum)</em>
                  <% end %>
                  <%= f.password_field :password, autocomplete: "new-password", :class=>"input100 form-control", :placeholder=>I18n.t('user.placefolders.password'), :pattern=>"(?=.*[a-z])(?=.*[A-Z]).{6,}", :required=>true %>
                  <div class="invalid-feedback yellow">
                    <%= I18n.t('user.hints.password') %>
                  </div>
                </div>
                
                <div class="form-group wrap-input100">
                  <%= f.label :password_confirmation, I18n.t('user.labels.confirm_new_password') %><br />
                  <%= f.password_field :password_confirmation, autocomplete: "new-password", :class=>"input100 form-control", :placeholder=>I18n.t('user.placefolders.confirm_password'), :required=>true %>
                  <div class="invalid-feedback yellow">
                    <%= I18n.t('user.hints.confirm_password') %>
                  </div>
                </div>
                <button type="submit" class="btn btn-default submit-button my-3 desktop-signup text-uppercase" style="font-size: 0.6rem"><%= I18n.t('button.change_my_password')%></button>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  $('.desktop-signup').click(function() {
  // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      });
    });
  });
</script>

<style type="text/css">
  .auth-panel {
    z-index: 999;
  }
</style>
